using SanteDB.OrmLite.Attributes;
using System;

namespace SanteDB.Persistence.Data.ADO.Data.Model.Security
{
    /// <summary>
    /// Represents a session in the database
    /// </summary>
    [Table("sec_ses_tbl")]
    public class DbSession : DbIdentified
    {
        /// <summary>
        /// Gets or sets the key of the session
        /// </summary>
        [Column("ses_id"), PrimaryKey, AutoGenerated]
        public override Guid Key { get; set; }

        /// <summary>
        /// Identifies the not before or creation time of the session
        /// </summary>
        [Column("crt_utc"), NotNull, AutoGenerated]
        public DateTimeOffset NotBefore { get; set; }

        /// <summary>
        /// Identifies the expiration or not after time of the session
        /// </summary>
        [Column("exp_utc"), NotNull]
        public DateTimeOffset NotAfter { get; set; }

        /// <summary>
        /// Identifies the application identifier to which the session belongs
        /// </summary>
        [Column("app_id"), NotNull]
        public Guid ApplicationKey { get; set; }

        /// <summary>
        /// Identifies the user key to which the session belongs
        /// </summary>
        [Column("usr_id")]
        public Guid? UserKey { get; set; }

        /// <summary>
        /// Identifies the refresh token which can be used to refresh the session
        /// </summary>
        [Column("rfrsh_tkn"), NotNull]
        public String RefreshToken { get; set; }

        /// <summary>
        /// Identifies the expiration of the refresh token
        /// </summary>
        [Column("rfrsh_exp_utc"), NotNull]
        public DateTimeOffset RefreshExpiration { get; set; }

        /// <summary>
        /// Identifies the remote endpoint which established the session
        /// </summary>
        [Column("aud"), NotNull]
        public String RemoteEndpoint { get; set; }

        /// <summary>
        /// The device key
        /// </summary>
        [Column("dev_id")]
        public Guid? DeviceKey { get; internal set; }
    }
}
